global
    log {{ haproxy_syslog_server }} local0
    log {{ haproxy_syslog_server }} local1 notice
    log-send-hostname {{ inventory_hostname }}
    chroot /var/lib/haproxy
    maxconn 4096
    tune.bufsize 384000
    tune.ssl.default-dh-param 2048

    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log	global
    option	dontlognull
    option redispatch
    retries 3
    timeout connect 10s
    timeout client  50s
    timeout server  50s

listen stats
    bind *:9000
    mode http
    stats enable
    stats uri /
    stats realm HAProxy\ Statistics
    stats hide-version
    stats auth {{ haproxy_stats_username }}:{{ haproxy_stats_password }}

{% if haproxy_frontend_list is defined and haproxy_frontend_list | length > 0 %}
{% for frontend in haproxy_frontend_list %}
frontend {{ frontend.name }}
{% if frontend.ssl is defined and frontend.ssl | length > 0 %}
    bind {{ frontend.bind_ip }}:443 ssl{% for item in frontend.ssl %} crt {{ item.cert_path }}{% endfor %}

    option tcplog
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
{% elif frontend.mode == 'http' %}
    option httplog
    option forwardfor except 127.0.0.0/8
{% else %}
    option tcplog
{% endif %}
{% if frontend.bind_port is defined and frontend.bind_port != '443' %}
    bind {{ frontend.bind_ip }}:{{ frontend.bind_port }}
{% endif %}
    mode {{ frontend.mode }}
{% if frontend.mode == 'http' %}
    option http-server-close
    option httpclose
{% endif %}
{% if frontend.virtual_hosts is defined and frontend.virtual_hosts | length > 0 %}
{% for virtual_host in frontend.virtual_hosts %}
    use_backend {{ virtual_host.backend_name }} if { hdr(Host) -i {{ virtual_host.hosts | join(' ') }} }
{% endfor %}
{% endif %}
    default_backend {{ frontend.default_backend }}
{% endfor %}
{% endif %}

{% if haproxy_backend_list is defined and haproxy_backend_list | length > 0 %}
{% for backend in haproxy_backend_list %}
backend {{ backend.name }}
{% if backend.forward_https is defined and backend.forward_https and backend.mode == 'http' %}
    redirect scheme https code 301 if !{ ssl_fc }
{% endif %}
    mode {{ backend.mode }}
    balance {{ backend.balance | default(haproxy_default_balance) }}
{% if backend.servers is defined and backend.servers | length > 0 %}
{% for server in backend.servers %}
    server {{ server.name }} {{ server.ip }}:{{ server.port }} check port {{ server.port }} inter {{ server.check_interval | default(haproxy_default_check_interval) }} rise {{ server.check_rise | default(haproxy_default_check_rise) }} fall {{ server.check_fall | default(haproxy_default_check_fall) }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
